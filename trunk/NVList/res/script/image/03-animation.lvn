
@@

--Define the frames of animation we'll use
local frames = {}
for i=1,4 do
	frames[i] = {texture=tex("anim/anim01#" .. i), duration=15} --duration is 15 frames (0.25 seconds)
end

--Create the 4 animating images
local drawables = {}
local anims = {}
for di=1,4 do
    drawables[di] = img(frames[1].texture)
    anims[di] = Anim.createFilmstrip(drawables[di], frames)
    anims[di]:start(-1)
end

--Position drawables in a grid
doLayout(GridLayout, screenWidth*.20, 0, screenWidth*.60, screenHeight*.75, {cols=2}, drawables)

@@

Showing a simple background animation. Click to start a one-time (blocking) move animation.

@local baseY = drawables[2]:getY()
@Anim.tweenFromTo(drawables[2], "y", baseY-50, baseY+50, 120)

Move animation finished. Click to start a looping move animation.

@@
local baseY = drawables[3]:getY()
local loopAnim = Anim.createTween(drawables[3], "y", baseY-50, baseY+50, 120)
loopAnim:start(3) --Start in the background, repeat 3 times. Use -1 to repeat forever.
table.insert(anims, loopAnim) --Add animation to our table of background animations (so we can call finish() on it later)
@@

This animation will loop three times, then stop. Click to start a multi-step animation, created with the 'Anim.par' and 'Anim.seq' functions.

@@
local d = drawables[4]
local baseX = d:getX()
local baseY = d:getY()

local zigzag = Anim.seq{
    Anim.createTween(d, "x", baseX-50, baseX+50, 90),
    Anim.createTween(d, "x", baseX+50, baseX-50, 90)
}
zigzag.loops = -1 --Zigzag loops forever

local multiAnim = Anim.seq{
    Anim.createTween(d, "pos", {baseX, baseY}, {baseX-50, baseY-50}, 120),
    Anim.createWait(20),
    Anim.par{
        Anim.createTween(d, "y", nil, baseY+50, 180),
        zigzag
    },
}
multiAnim:start()
@@

This animation will move to the top-left, then move down and zigzag in the x-direction.

@multiAnim:finish()

Multi-step animation finished.

@@
--Finish each animation
for _,a in ipairs(anims) do
    a:finish()
end
@@

Ended all animations.

@destroyValues(drawables)
